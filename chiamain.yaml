---

# VM must be created first, use vm_deploy_chiamain.yml

- hosts: chiamain
  vars_files: group_vars/secret.yml

  vars:

    # pip docker package is used for deploying docker containers
    pip_package: python3-pip
    pip_install_packages:
      - name: docker
      - name: docker-compose

  pre_tasks:
    
    - name: Combine chia package vars
      set_fact:
        host_packages: "{{ host_packages | default([]) + chia_packages }}"
      when: chia_packages is defined
    
    - name: Combine chia_farmer package vars
      set_fact:
        host_packages: "{{ host_packages | default([]) + chia_farmer_packages }}"
      when: chia_farmer_packages is defined

    - name: Combine chia mount vars
      set_fact:
        host_mounts: "{{ host_mounts | default([]) + chia_mounts }}"
      when: chia_mounts is defined
    
    - name: Combine chia_farmer mount vars
      set_fact:
        host_mounts: "{{ host_mounts | default([]) + chia_farmer_mounts }}"
      when: chia_farmer_mounts is defined

  roles:
    - vmguest
    
    # Install system packages, config, mount points
    - role: system
      vars:
        packages: "{{ host_packages }}"
        mounts: "{{ host_mounts }}"
        
      tags: setup

    # Setup docker
    - { role: geerlingguy.pip, become: true, tags: [setup] }
    - role: geerlingguy.docker
      become: true
      vars:
        docker_users:
          - "{{ provisioning_user }}"
      tags: setup
    
    # Deploy docker containers
    - { role: containers/portainer, tags: [containers] }
    - { role: containers/portainer_agent, tags: [containers] }
    - role: containers/telegraf
      vars:
        telegraf_agent_output:
          - type: influxdb
            config:
              - urls = ["http://{{ influx_v1_server }}:{{ influx_v1_port }}"]
              - database = "filecoin"
        telegraf_plugins_default:
          - plugin: cpu
            config:
              - percpu = true
              - totalcpu = true
              - collect_cpu_time = false
              - report_active = false
          - plugin: disk
            config:
              - ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]
          - plugin: diskio
          - plugin: kernel
          - plugin: mem
          - plugin: swap
          - plugin: system
          - plugin: docker
            config:
              - endpoint = "unix:///var/run/docker.sock"
          - plugin: net
          - plugin: netstat
      tags: containers, telegraf
    
    # Setup the environment for chia containers
    - { role: chia, tags: [setup] }
    
    # Machinaris containers - configured by variable `containers`
    - role: docker_compose_generator
      tags: setup

    # Watchtower
    - role: containers/watchtower
      vars:
        update_schedule: '"0 00 05 * * *"'   # Run at 5:00am daily
      tags: containers, watchtower
