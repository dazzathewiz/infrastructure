---

# Replaces fil-miner functions into proxmox VM

# VM must be created first, use vm_deploy_storecrypt.yml

# Setup storecrypt server
- hosts: storecrypt
  vars_files: group_vars/secret.yml

  vars:

    # pip docker package is used for deploying docker containers
    pip_package: python3-pip
    pip_install_packages:
      - name: docker
      - name: docker-compose

  roles:
    - vmguest

    - role: 45drives/repo
      tags: 45drives
    
    # Install system packages, config, mount points
    - role: system
      vars:
        packages:
          - zfsutils-linux
          - mergerfs
          - samba
          - cifs-utils
          - 45drives-tools
          - cockpit
          - cockpit-file-sharing
          - iperf3
          - fio
        mounts:

          # Disk mounts
          - { path: /mnt/disk1, src: UUID=6d1faaa6-3179-4218-b936-7639a2832b67, fstype: xfs }
          - { path: /mnt/disk2, src: UUID=7cd7a54a-94ed-416d-89e9-fc12ea42d6c0, fstype: ext4 }
          - { path: /mnt/disk3, src: UUID=36e9d9b7-5cdf-4293-910c-0a7e23b92807, fstype: ext4 }
          - { path: /mnt/disk4, src: UUID=51623c95-43d9-4c06-8d2d-c5b209679bb1, fstype: ext4 }
          - { path: /mnt/disk5, src: UUID=26975cf9-2a6f-4f99-b1d7-624c3b8de68a, fstype: ext4 }
          - { path: /mnt/disk6, src: UUID=c393c4e5-a091-4bf3-903b-a958166c7c20, fstype: ext4 }
          - { path: /mnt/disk7, src: UUID=a653c83f-b098-4fed-bdf3-168ff417cf41, fstype: ext4 }

          # MergerFS mount
          - { path: /mnt/storage, src: /mnt/disk*, fstype: fuse.mergerfs, opts: 'allow_other,direct_io,use_ino,category.create=mfs,moveonenospc=true,minfreespace=2G,fsname=array' }

      tags: setup

    - role: 45drives/zfs-manager
      tags: setup

    # Setup ZFS
    # For zfs role; see https://github.com/dazzathewiz/infrastructure/tree/role-zfs
    # It was much easier to use Houston to configure ZFS import on storecrypt; see: https://miner.dazzathewiz.com:9090/

    # NFS share setup and export (of ZFS)
    # NFS share settings for Houston are stored in /etc/exports.d/cockpit-file-sharing.exports <-- could be backed up and restored in future
    # Settings should be configured as per documentation: https://knowledgebase.45drives.com/kb/kb450282-managing-nfs-in-houston-ui/

    # Install hddtemp monitoring
    - { role: ironicbadger.hddtemp, become: true, tags: [setup] }

    # Setup docker
    - { role: geerlingguy.pip, become: true, tags: [setup] }
    - role: geerlingguy.docker
      become: true
      vars:
        docker_users:
          - "{{ provisioning_user }}"
      tags: setup
    
    # Deploy docker containers
    - { role: containers/portainer, tags: [containers] }
    - { role: containers/portainer_agent, tags: [containers] }
    - role: containers/telegraf
      vars:
        telegraf_agent_output:
          - type: influxdb
            config:
              - urls = ["http://{{ influx_v1_server }}:{{ influx_v1_port }}"]
              - database = "filecoin"
        telegraf_plugins_default:
          - plugin: cpu
            config:
              - percpu = true
              - totalcpu = true
              - collect_cpu_time = false
              - report_active = false
          - plugin: disk
            config:
              - ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]
          - plugin: diskio
          - plugin: kernel
          - plugin: mem
          - plugin: swap
          - plugin: system
          - plugin: docker
            config:
              - endpoint = "unix:///var/run/docker.sock"
          - plugin: hddtemp
          - plugin: net
          - plugin: netstat
          - plugin: zfs
            config:
              - poolMetrics = true
      tags: containers, telegraf
    
    - role: containers/storj
      vars:
        container_storj_wallet: "{{ storj_wallet }}"
        container_storj_email: "{{ admin_email }}"
        container_storj_address: "{{ storj_address }}"
        container_storj_storage: 8TB
        container_storj_data: /mnt/disk3/storj/data
        container_storj_identity: /mnt/disk3/storj/Identity/storagenode
        container_data_backup_dir: "{{ persistent_backup }}/storagenode"
    
    # machinaris containers
    # Deploy manually w/ Portainer and docker-compose: https://github.com/dazzathewiz/chia-forks.git

    # Watchtower
    - role: containers/watchtower
      vars:
        update_schedule: '"0 00 05 * * *"'   # Run at 5:00am daily
      tags: containers, watchtower
