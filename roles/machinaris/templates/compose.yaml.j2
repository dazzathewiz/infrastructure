containers:
{% for blockchain in blockchains %}
  - service_name: machinaris{% if blockchain is not 'chia' %}-{{ blockchain }}{% endif %}
    active: "{{ blockchain.enable }}"
    image: "{{ machinaris_docker_image }}"
    container_name: machinaris{% if blockchain is not 'chia' %}-{{ blockchain }}{% endif %}
    hostname: "{{ inventory_hostname }}"
    restart: always
    volumes: 
      - "{{ machinaris_docker_data }}/.machinaris:/root/.chia"
      - "{{ machinaris_docker_data }}/keys:{{ machinaris_farmer_container_keys_dir }}"
{% for volume in volume_mounts %}
      - "{{ item['hostpath'] }}:{{ item['container_path'] }}"
{% endfor %}
      # Volumes are set by `role: chia`, where the host has `chia_harvester_plots` defined, otherwise define:
      # - "/host/path/1:/plots1"
      # - "/host/path/2:/plots2"
      # - "/host/path/3:/plots3"
    environment: 
      - "TZ={{ timezone }}"
      - "mode={{ mode }}"
      - "worker_address={{ chia_network['chia_main']['ip'] }}"
      # These options are set by `role: chia`, where the host has `chia_harvester_plots` and/or `chia_farmer_mnemonics` defined
      # - "plots_dir=/plots1:/plots2:/plots3
      # - "keys=/root/.chia/mnemonic.txt:/root/.chia/fil_mnemonic_1.txt"
      - blockchains=chia
      - blockchain_db_download=true
      - OPENCL_GPU=nvidia
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    runtime: nvidia
    # network_mode: "host"
    networks:
      miner_network:
        ipv4_address: "{{ chia_network['chia_main']['ip'] }}"
    ports:
      - 8926:8926
      - 8927:8927
      - 8444:8444
      - 8447:8447
    
docker_networks:
  miner_network:
    driver: macvlan
    driver_opts:
      parent: "{{ ansible_default_ipv4.interface }}"
    ipam:
      config:
        - subnet: "{{ chia_network['default']['subnet'] }}"
          gateway: "{{ chia_network['default']['gateway'] }}"
          ip_range: "{{ chia_network['default']['ip_range'] }}"